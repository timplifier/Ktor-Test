[versions]
#AGP
agp = "8.0.0-rc01"
#KSP
ksp = "1.7.21-1.0.8"
#Gradle
gradle = "7.5.1"
#Kotlin
kotlin = "1.7.20"
#Serialization
kotlinSerialization = "1.7.0"
kotlinSerializationJson = "1.4.1"
#Ktor
ktor = "2.2.4"
dokka = "0.9.18"
#Moshi
moshi = "1.13.0"
#Coroutines
coroutines = "1.6.4"
#Arrow
arrow = "1.0.1"
#Legacy support
legacySupport = "1.0.0"
#UI Components
material = "1.8.0-alpha01"
constraint = "2.1.4"
viewBindingPropertyDelegate = "1.5.6"
appCompat = "1.5.1"
splashScreen = "1.0.0-beta01"
maskedEditText = "1.0.0"
emojiPopUp = "0.15.0"
balloon = "1.4.7"
shimmer = "0.5.0"
swipeToRefresh = "1.1.0"
lottie = "5.2.0"
smartSwipeToRefresh = "2.0.5"
#Core
core = "1.8.0"
profileInstaller = "1.3.0"
#Activity
activity = "1.5.1"
#fragment
fragment = "1.5.1"
#Lifecycle
lifecycle = "2.5.1"
#Navigation
navigation = "2.5.2"
#Dagger
dagger = "2.43.2"
#Hilt
hiltNavGraphViewModels = "1.0.0"
#Javax
javax = "1"
#Retrofit
retrofit = "2.9.0"
#OkHttp
okHttp = "5.0.0-alpha.10"
#Room
room = "2.4.3"
#Datastore
datastore = "1.0.0"
#Paging
paging = "3.1.1"
#DotsIndicator
dotsIndicator = "4.3"
#Firebase
firebaseFirestore = "24.1.2"
firebaseCloudStorage = "20.0.1"
googleServices = "4.3.10"
firebasePlatform = "30.1.0"
firebaseCrashlytics = "2.8.1"
firebaseAnalytics = "21.0.0"
firebaseCoroutines = "1.6.1"
firebaseCloudMessaging = "23.0.5"
firebaseInAppMessaging = "20.1.2"
firebaseAdMob = "21.0.0"
#Glide
glide = "4.13.0"
#Koin
koin = "3.2.2"
koinAnnotations = "1.2.0"
[libraries]

#JetBrains
jetBrains-kotlin-gradle = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }
jetBrains-dokka-base = { module = "org.jetbrains.dokka:dokka-base", version.ref = "kotlin" }
jetBrains-dokka-gradle = { module = "org.jetbrains.dokka:dokka-gradle-plugin", version.ref = "kotlin" }
jetBrains-dokka-android-documentation = { module = "org.jetbrains.dokka:android-documentation-plugin", version.ref = "kotlin" }
jetBrains-dokka-android-gradle = { module = "org.jetbrains.dokka:dokka-android-gradle-plugin", version.ref = "dokka" }
jetBrains-kotlin-serialization = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinSerializationJson" }
#Ktor
jetBrains-ktor-core = { module = "io.ktor:ktor-server-core", version.ref = "ktor" }
jetBrains-ktor-logging = { module = "io.ktor:ktor-client-logging", version.ref = "ktor" }
jetBrains-ktor-engine-android = { module = "io.ktor:ktor-client-android", version.ref = "ktor" }
jetBrains-ktor-engine-cio = { module = "io.ktor:ktor-client-cio", version.ref = "ktor" }
jetBrains-ktor-engine-okHttp = { module = "io.ktor:ktor-client-okhttp", version.ref = "ktor" }
jetBrains-ktor-websockets = { module = "io.ktor:ktor-server-websockets", version.ref = "ktor" }
jetBrains-ktor-serialization-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
jetBrains-ktor-serialization-gson = { module = "io.ktor:ktor-serialization-gson", version.ref = "ktor" }
jetBrains-ktor-serialization-jackson = { module = "io.ktor:ktor-serialization-jackson", version.ref = "ktor" }
jetBrains-ktor-serialization-xml = { module = "io.ktor:ktor-serialization-kotlinx-xml", version.ref = "ktor" }
jetBrains-ktor-serialization-cbor = { module = "io.ktor:ktor-serialization-kotlinx-cbor", version.ref = "ktor" }
jetBrains-ktor-serialization-protoBuf = { module = "io.ktor:ktor-serialization-kotlinx-protobuf", version.ref = "ktor" }
jetBrains-ktor-netty = { module = "io.ktor:ktor-server-netty", version.ref = "ktor" }

#Moshi
moshi-moshi = { module = "com.squareup.moshi:moshi-kotlin", version.ref = "moshi" }

#Coroutines
coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutines" }
coroutines-android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "coroutines" }

#Arrow
arrow-core = { module = "io.arrow-kt:arrow-core", version.ref = "arrow" }
arrow-optics = { module = "io.arrow-kt:arrow-optics", version.ref = "arrow" }
arrow-corePlusOptics = { module = "io.arrow-kt:arrow-meta", version.ref = "arrow" }
arrow-corePlusFx = { module = "io.arrow-kt:arrow-fx-coroutines", version.ref = "arrow" }
arrow-fxStm = { module = "io.arrow-kt:arrow-fx-stm", version.ref = "arrow" }

#Core
android-core = { module = "androidx.core:core-ktx", version.ref = "core" }
android-profileInstaller = { module = "androidx.profileinstaller:profileinstaller", version.ref = "profileInstaller" }

#UI Components
ui-activity = { module = "androidx.activity:activity-ktx", version.ref = "activity" }
ui-fragment = { module = "androidx.fragment:fragment-ktx", version.ref = "fragment" }
ui-material = { module = "com.google.android.material:material", version.ref = "material" }
ui-appCompat = { module = "androidx.appcompat:appcompat", version.ref = "appCompat" }
ui-constraint = { module = "androidx.constraintlayout:constraintlayout", version.ref = "constraint" }
ui-viewBindingPropertyDelegate = { module = "com.github.kirich1409:viewbindingpropertydelegate-noreflection", version.ref = "viewBindingPropertyDelegate" }
ui-maskedEditText = { module = "com.github.santalu:maskara", version.ref = "maskedEditText" }
ui-splashScreen = { module = "androidx.core:core-splashscreen", version.ref = "splashScreen" }
ui-dotsIndicator = { module = "com.tbuonomo:dotsindicator", version.ref = "dotsIndicator" }
ui-emojiMaterial = { module = "com.vanniktech:emoji-material", version.ref = "emojiPopUp" }
ui-emojiGoogle = { module = "com.vanniktech:emoji-google", version.ref = "emojiPopUp" }
glide-glide = { module = "com.github.bumptech.glide:glide", version.ref = "glide" }
balloon-balloon = { module = "com.github.skydoves:balloon", version.ref = "balloon" }
shimmer-shimmer = { module = "com.facebook.shimmer:shimmer", version.ref = "shimmer" }
ui-swipeToRefresh = { module = "androidx.swiperefreshlayout:swiperefreshlayout", version.ref = "swipeToRefresh" }
ui-lottie = { module = "com.airbnb.android:lottie", version.ref = "lottie" }
smartSwipeToRefresh-layout-kernel = { module = "io.github.scwang90:refresh-layout-kernel", version.ref = "smartSwipeToRefresh" }
smartSwipeToRefresh-header-classics = { module = "io.github.scwang90:refresh-header-classics", version.ref = "smartSwipeToRefresh" }
smartSwipeToRefresh-header-radar = { module = "io.github.scwang90:refresh-header-radar", version.ref = "smartSwipeToRefresh" }
smartSwipeToRefresh-header-falsify = { module = "io.github.scwang90:refresh-header-falsify", version.ref = "smartSwipeToRefresh" }
smartSwipeToRefresh-header-material = { module = "io.github.scwang90:refresh-header-material", version.ref = "smartSwipeToRefresh" }
smartSwipeToRefresh-header-twoLevel = { module = "io.github.scwang90:refresh-header-two-level", version.ref = "smartSwipeToRefresh" }
smartSwipeToRefresh-footer-ball = { module = "io.github.scwang90:refresh-footer-ball", version.ref = "smartSwipeToRefresh" }
smartSwipeToRefresh-footer-classics = { module = "io.github.scwang90:refresh-footer-classics", version.ref = "smartSwipeToRefresh" }

#Legacy Support
legacySupport-legacySupport = { module = "androidx.legacy:legacy-support-v4", version.ref = "legacySupport" }

#Lifecycle
lifecycle-runtime = { module = "androidx.lifecycle:lifecycle-runtime-ktx", version.ref = "lifecycle" }
lifecycle-viewModel = { module = "androidx.lifecycle:lifecycle-viewmodel-ktx", version.ref = "lifecycle" }
lifecycle-liveData = { module = "androidx.lifecycle:lifecycle-livedata-ktx", version.ref = "lifecycle" }

#Navigation
navigation-fragment = { module = "androidx.navigation:navigation-fragment-ktx", version.ref = "navigation" }
navigation-ui = { module = "androidx.navigation:navigation-ui-ktx", version.ref = "navigation" }

#Dagger
dagger-dagger = { module = "com.google.dagger:dagger", version.ref = "dagger" }
dagger-compiler = { module = "com.google.dagger:dagger-compiler", version.ref = "dagger" }

#Hilt
hilt-android = { module = "com.google.dagger:hilt-android", version.ref = "dagger" }
hilt-viewModels = { module = "androidx.hilt:hilt-navigation-fragment", version.ref = "hiltNavGraphViewModels" }
hilt-compiler = { module = "com.google.dagger:hilt-compiler", version.ref = "dagger" }

#Javax
javax-inject = { module = "javax.inject:javax.inject", version.ref = "javax" }

#Retrofit
retrofit-retrofit = { module = "com.squareup.retrofit2:retrofit", version.ref = "retrofit" }
retrofit-gsonConverter = { module = "com.squareup.retrofit2:converter-gson", version.ref = "retrofit" }
retrofit-moshiConverter = { module = "com.squareup.retrofit2:converter-moshi", version.ref = "retrofit" }

#OkHttp
okHttp-okHttp = { module = "com.squareup.okhttp3:okhttp" }
okHttp-bom = { module = "com.squareup.okhttp3:okhttp-bom", version.ref = "okHttp" }
okHttp-loggingInterceptor = { module = "com.squareup.okhttp3:logging-interceptor" }

#Room
room-runtime = { module = "androidx.room:room-runtime", version.ref = "room" }
room-compiler = { module = "androidx.room:room-compiler", version.ref = "room" }
room-kotlinExtensionsAndCoroutinesSupport = { module = "androidx.room:room-ktx", version.ref = "room" }

#Preferences and Datastore
datastore-preferences = { module = "androidx.datastore:datastore-preferences", version.ref = "datastore" }
datastore-proto = { module = "androidx.datastore:datastore", version.ref = "datastore" }

#Paging
paging-paging = { module = "androidx.paging:paging-runtime-ktx", version.ref = "paging" }
paging-common = { module = "androidx.paging:paging-common-ktx", version.ref = "paging" }

#Firebase
firebase-firestore = { module = "com.google.firebase:firebase-firestore-ktx", version.ref = "firebaseFirestore" }
firebase-cloudStorage = { module = "com.google.firebase:firebase-storage-ktx", version.ref = "firebaseCloudStorage" }
firebase-platform = { module = "com.google.firebase:firebase-bom", version.ref = "firebasePlatform" }
firebase-crashlytics = { module = "com.google.firebase:firebase-crashlytics-ktx" }
firebase-analytics = { module = "com.google.firebase:firebase-analytics-ktx", version.ref = "firebaseAnalytics" }
firebase-cloudMessaging = { module = "com.google.firebase:firebase-messaging-ktx", version.ref = "firebaseCloudMessaging" }
firebase-auth = { module = "com.google.firebase:firebase-auth-ktx" }
firebase-coroutines = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-play-services", version.ref = "firebaseCoroutines" }
firebase-inAppMessaging = { module = "com.google.firebase:firebase-inappmessaging-ktx", version.ref = "firebaseInAppMessaging" }
firebase-inAppMessagingDisplay = { module = "com.google.firebase:firebase-inappmessaging-display-ktx", version.ref = "firebaseInAppMessaging" }
firebase-adMob = { module = "com.google.android.gms:play-services-ads", version.ref = "firebaseAdMob" }
#Koin
koin-core = { module = "io.insert-koin:koin-core", version.ref = "koin" }
koin-annotations = { module = "io.insert-koin:koin-annotations", version.ref = "koinAnnotations" }
koin-compiler = { group = "io.insert-koin", name = "koin-ksp-compiler", version.ref = "koinAnnotations" }
koin-android = { module = "io.insert-koin:koin-android", version.ref = "koin" }
koin-workManager = { module = "io.insert-koin:koin-androidx-workmanager", version.ref = "koin" }
koin-navigation = { module = "io.insert-koin:koin-androidx-navigation", version.ref = "koin" }

[bundles]
#UI Components
uiComponents = ["ui-activity", "ui-fragment", "ui-appCompat", "ui-constraint", "ui-material", "ui-viewBindingPropertyDelegate", "glide-glide", "ui-splashScreen"]
#SmartSwipeToRefresh
smartSwipeToRefresh = ["smartSwipeToRefresh-layout-kernel", "smartSwipeToRefresh-header-classics", "smartSwipeToRefresh-header-radar", "smartSwipeToRefresh-header-falsify", "smartSwipeToRefresh-header-material", "smartSwipeToRefresh-header-material", "smartSwipeToRefresh-header-twoLevel", "smartSwipeToRefresh-footer-ball", "smartSwipeToRefresh-footer-classics"]
smartSwipeToRefreshCoreAndClassicsHeader = ["smartSwipeToRefresh-layout-kernel", "smartSwipeToRefresh-header-classics"]

#Coroutines
coroutines = ["coroutines-core", "coroutines-android"]

#Room
room = ["room-runtime", "room-kotlinExtensionsAndCoroutinesSupport"]

#Datastore
datastore = ["datastore-preferences", "datastore-proto"]

#Retrofit
retrofit = ["retrofit-retrofit", "retrofit-gsonConverter"]
ktor = ["jetBrains-ktor-core", "jetBrains-ktor-logging", "jetBrains-ktor-websockets"]

#Hilt
hilt = ["hilt-android", "hilt-viewModels"]

#Koin
koin = ["koin-android", "koin-workManager", "koin-navigation"]

#OkHttp
okHttp = ["okHttp-bom", "okHttp-loggingInterceptor", "okHttp-okHttp"]

#Navigation
navigation = ["navigation-fragment", "navigation-ui"]

#Lifecycle
lifecycle = ["lifecycle-viewModel", "lifecycle-runtime", "lifecycle-liveData"]

#Firebase
firebase = ["firebase-firestore", "firebase-platform", "firebase-coroutines"]
firebaseNoCrashlytics = ["firebase-firestore", "firebase-cloudStorage", "firebase-coroutines", "firebase-analytics", "firebase-auth", "firebase-cloudMessaging", "firebase-inAppMessaging", "firebase-inAppMessagingDisplay", "firebase-adMob"]
firebaseNoAdMobAndCrashlytics = ["firebase-firestore", "firebase-cloudStorage", "firebase-coroutines", "firebase-analytics", "firebase-auth", "firebase-cloudMessaging", "firebase-inAppMessaging", "firebase-inAppMessagingDisplay"]


[plugins]
#AGP
agp-application = { id = "com.android.application", version.ref = "agp" }
agp-library = { id = "com.android.library", version.ref = "agp" }
agp-test = { id = "com.android.test", version.ref = "agp" }
agp-ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }

#JetBrains
jetBrains-kotlin-gradle = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
jetBrains-kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
jetBrains-kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
jetBrains-dokka = { id = "org.jetbrains.dokka", version.ref = "kotlin" }
jetBrains-kotlin-kapt = { id = "kotlin-kapt" }
jetBrains-kotlin-android = { id = "kotlin-android" }
#Java
java-library = { id = "java-library" }

#Navigation
navigation-safeArgs = { id = "androidx.navigation.safeargs.kotlin", version.ref = "navigation" }

#Hilt
hilt-android = { id = "com.google.dagger.hilt.android", version.ref = "dagger" }

#Google Services
google-services = { id = "com.google.gms.google-services", version.ref = "googleServices" }

#Firebase
firebase-crashlytics = { id = "com.google.firebase.crashlytics", version.ref = "firebaseCrashlytics" }